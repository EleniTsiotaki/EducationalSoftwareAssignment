@{
    ViewData["Title"] = "Test 3";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        #timer, #quizForm {
            display: none;
        }

        #timer {
            font-size: 2em;
            margin-top: 20px;
            text-align: center;
        }

        .container {
            text-align: center;
        }
    </style>
</head>
<body class="bg-dark text-white">
    <header style="margin-top:7%; margin-bottom:3%; text-align: center; font-size: 40px; color: #fff4e6;">@ViewData["Title"]</header>
    <div class="container pb-5">
        <button id="begin-test-btn" type="button" class="btn btn-primary">Begin Test</button>
        <div id="timer">Time: <span id="time-elapsed">0:00</span></div>
        <form id="quizForm" class="mt-5">
            <div class="form-group">
                <p>1. A constructor has the same name as the class and does not have a return type.</p>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question1" value="True">
                    <label class="custom-control-label">True</label>
                </div>
                <div class="custom-control custom-radio mb-3">
                    <input type="radio" class="custom-control-input" name="question1" value="False">
                    <label class="custom-control-label">False</label>
                </div>

                <p>2. Multiple Choice: Which of the following keywords is used to create an object in Java?</p>
                <div class="custom-control custom-radio ">
                    <input type="radio" class="custom-control-input" name="question2" value="class">
                    <label class="custom-control-label">class</label>
                </div>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question2" value="new">
                    <label class="custom-control-label">new</label>
                </div>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question2" value="object">
                    <label class="custom-control-label">object</label>
                </div>
                <div class="custom-control custom-radio mb-3">
                    <input type="radio" class="custom-control-input" name="question2" value="create">
                    <label class="custom-control-label">create</label>
                </div>

                <p>3. Multiple Choice: What will be the output of the following code?
                    class Animal {
                        String name;
                        Animal(String n) {
                            name = n;
                        }
                    }
                    public class Test {
                        public static void main(String[] args) {
                            Animal dog = new Animal("Buddy");
                            System.out.println(dog.name);
                        }
                    }
                </p>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question3" value="null">
                    <label class="custom-control-label">null</label>
                </div>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question3" value="Buddy">
                    <label class="custom-control-label">Buddy</label>
                </div>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question3" value="Error">
                    <label class="custom-control-label">Error</label>
                </div>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question3" value="Animal">
                    <label class="custom-control-label">Animal</label>
                </div>

                <p>4. True/False: A method can be overloaded by changing the return type alone.</p>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question4" value="True">
                    <label class="custom-control-label">True</label>
                </div>
                <div class="custom-control custom-radio mb-3">
                    <input type="radio" class="custom-control-input" name="question4" value="False">
                    <label class="custom-control-label">False</label>
                </div>

                <p>Multiple Choice: Which of the following statements about constructors is true?</p>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question5" value="A class can have only one constructor.">
                    <label class="custom-control-label">A class can have only one constructor.</label>
                </div>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question5" value="Constructors can have different names as long as they are unique.">
                    <label class="custom-control-label">Constructors can have different names as long as they are unique. </label>
                </div>
                <div class="custom-control custom-radio">
                    <input type="radio" class="custom-control-input" name="question5" value="Constructors are called when an object is created.">
                    <label class="custom-control-label">Constructors are called when an object is created.</label>
                </div>
                <div class="custom-control custom-radio mb-3">
                    <input type="radio" class="custom-control-input" name="question5" value="Constructors cannot take parameters.">
                    <label class="custom-control-label">Constructors cannot take parameters.</label>
                </div>

            </div>
            <br />
            <button id="grade-quiz-btn" type="button" class="btn btn-success" style="display:none;" onclick="gradeQuiz()">Grade Quiz</button>
        </form>
    </div>

    <script>
        let startTime, timerInterval;

        document.getElementById('begin-test-btn').addEventListener('click', function () {
            this.style.display = 'none';
            document.getElementById('timer').style.display = 'block';
            document.getElementById('quizForm').style.display = 'block';
            document.getElementById('grade-quiz-btn').style.display = 'inline-block';
            startTimer();
        });

        function startTimer() {
            startTime = Date.now();
            timerInterval = setInterval(() => {
                const elapsedTime = Math.floor((Date.now() - startTime) / 1000);
                const minutes = Math.floor(elapsedTime / 60);
                const seconds = elapsedTime % 60;
                document.getElementById('time-elapsed').innerText = `${minutes}:${seconds.toString().padStart(2, '0')}`;
            }, 1000);
        }

        function stopTimer() {
            clearInterval(timerInterval);
            const elapsedTime = Math.floor((Date.now() - startTime) / 1000);
            return elapsedTime;
        }

        async function gradeQuiz() {
            const elapsedTime = stopTimer();
            document.getElementById('timer').style.display = 'none';
            document.getElementById('grade-quiz-btn').style.display = 'none';
            document.getElementById('begin-test-btn').style.display = 'inline-block';
            document.getElementById('quizForm').style.display = 'none';

            const correctAnswers = {
                question1: "True",
                question2: "new",
                question3: "Buddy",
                question4: "False",
                question5: "Constructors are called when an object is created."
            };

            const form = document.getElementById('quizForm');
            let score = 0;
            let all_correct = true;
            for (const [question, answer] of Object.entries(correctAnswers)) {
                const selected = form.querySelector(`input[name="${question}"]:checked`);
                if (selected && selected.value === answer) {
                    score++;
                }
                else {
                    all_correct = false;
                }
            }

            // Save elapsed time and score to the database
            // access the test_id
            if (all_correct == true) {
                const testId = 3;
                const score = 2.5;
                const response = await fetch('/Tests/PostTestResult', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ TestId: testId, Score: score, ElapsedTime: `${Math.floor(elapsedTime / 60)}:${elapsedTime % 60}` })
                });

                if (response.ok) {
                    alert('Quiz graded successfully!');
                } else {
                    alert('Failed to save the quiz time and score.');
                }
            }
            else {
                alert('Not all answers are correct. The quiz result will not be saved.');
            }

        }
    </script>
</body>
</html>