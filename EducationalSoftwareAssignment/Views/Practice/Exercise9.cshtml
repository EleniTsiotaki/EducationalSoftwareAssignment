@{
    ViewData["Title"] = "Exercise 9: Java Collections Framework";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"
          integrity="sha384-JcKb8q3iqJ61gNV9KGb8thSsNjpSL0n8PARn9HuZOnIxN0hoP+VmmDGMN5t9UJ0Z" crossorigin="anonymous">
    <style>
        body {
            background-color: #121212;
            color: #e0e0e0;
            font-family: Arial, sans-serif;
        }

        .container {
            margin-top: 50px;
        }

        .exercise-container {
            padding: 30px;
            background-color: #1e1e1e;
            border: 1px solid #333;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.5);
        }

        h1 {
            font-size: 2em;
            color: #81d4fa;
            margin-bottom: 20px;
        }

        .exercise-content {
            margin-top: 20px;
        }

            .exercise-content p {
                font-size: 1.1em;
                color: #b0b0b0;
            }

        pre {
            background-color: #2d2d2d;
            color: #c5c5c5;
            padding: 10px;
            border-radius: 5px;
            overflow-x: auto;
        }

        code {
            color: #d4d4d4;
        }

        .custom-control-label {
            color: #e0e0e0;
        }

        .btn-primary {
            background-color: deepskyblue;
            border-color: deepskyblue;
        }

            .btn-primary:hover {
                background-color: blue;
                border-color: blue;
            }

        .correct-answer {
            color: #34d399;
        }

        .wrong-answer {
            color: #f87171;
        }

        .highlight {
            background-color: #333;
            border: 2px solid #f87171;
        }
    </style>
</head>
<body>
    <div class="container exercise-container">
        <h1>@ViewData["Title"]</h1>
        <div class="exercise-content">
            <h3>Choose the correct answer for the following questions about Java Collections Framework:</h3>

            <form id="exercise-form">
                <div class="form-group">
                    <p>
                        1. What is the correct way to declare a list in Java using `ArrayList`?<br>
                        <pre><code>import java.util.ArrayList;
import java.util.List;

public class Main {
    public static void main(String[] args) {
        List&lt;String&gt; list = new ArrayList&lt;&gt;();
    }
}</code></pre>
                    </p>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q1a" name="question1" value="A" class="custom-control-input">
                        <label class="custom-control-label" for="q1a">List&lt;String&gt; list = new ArrayList&lt;String&gt;();</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q1b" name="question1" value="B" class="custom-control-input">
                        <label class="custom-control-label" for="q1b">ArrayList&lt;String&gt; list = new ArrayList&lt;String&gt;();</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q1c" name="question1" value="C" class="custom-control-input">
                        <label class="custom-control-label" for="q1c">ArrayList list = new ArrayList();</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q1d" name="question1" value="D" class="custom-control-input">
                        <label class="custom-control-label" for="q1d">List list = new ArrayList();</label>
                    </div>
                </div>

                <div class="form-group">
                    <p>
                        2. How do you add an element to a `HashSet`?<br>
                        <pre><code>import java.util.HashSet;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Set&lt;String&gt; set = new HashSet&lt;&gt;();
        set.add("Element");
    }
}</code></pre>
                    </p>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q2a" name="question2" value="A" class="custom-control-input">
                        <label class="custom-control-label" for="q2a">set.add("Element");</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q2b" name="question2" value="B" class="custom-control-input">
                        <label class="custom-control-label" for="q2b">set.put("Element");</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q2c" name="question2" value="C" class="custom-control-input">
                        <label class="custom-control-label" for="q2c">set.addElement("Element");</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q2d" name="question2" value="D" class="custom-control-input">
                        <label class="custom-control-label" for="q2d">set.insert("Element");</label>
                    </div>
                </div>

                <div class="form-group">
                    <p>
                        3. What is the output of the following code snippet using `HashMap`?<br>
                        <pre><code>import java.util.HashMap;
import java.util.Map;

public class Main {
    public static void main(String[] args) {
        Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();
        map.put("Key1", 1);
        map.put("Key2", 2);
        System.out.println(map.get("Key1"));
    }
}</code></pre>
                    </p>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q3a" name="question3" value="A" class="custom-control-input">
                        <label class="custom-control-label" for="q3a">1</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q3b" name="question3" value="B" class="custom-control-input">
                        <label class="custom-control-label" for="q3b">2</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q3c" name="question3" value="C" class="custom-control-input">
                        <label class="custom-control-label" for="q3c">Key1</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q3d" name="question3" value="D" class="custom-control-input">
                        <label class="custom-control-label" for="q3d">null</label>
                    </div>
                </div>

                <div class="form-group">
                    <p>
                        4. Which interface does `TreeSet` implement?<br>
                        <pre><code>import java.util.TreeSet;
import java.util.Set;

public class Main {
    public static void main(String[] args) {
        Set&lt;String&gt; set = new TreeSet&lt;&gt;();
    }
}</code></pre>
                    </p>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q4a" name="question4" value="A" class="custom-control-input">
                        <label class="custom-control-label" for="q4a">Set</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q4b" name="question4" value="B" class="custom-control-input">
                        <label class="custom-control-label" for="q4b">List</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q4c" name="question4" value="C" class="custom-control-input">
                        <label class="custom-control-label" for="q4c">Queue</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q4d" name="question4" value="D" class="custom-control-input">
                        <label class="custom-control-label" for="q4d">Map</label>
                    </div>
                </div>

                <div class="form-group">
                    <p>
                        5. How do you iterate over a `HashMap`?<br>
                        <pre><code>import java.util.HashMap;
import java.util.Map;

public class Main {
    public static void main(String[] args) {
        Map&lt;String, Integer&gt; map = new HashMap&lt;&gt;();
        map.put("Key1", 1);
        map.put("Key2", 2);

        for (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) {
            System.out.println(entry.getKey() + ": " + entry.getValue());
        }
    }
}</code></pre>
                    </p>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q5a" name="question5" value="A" class="custom-control-input">
                        <label class="custom-control-label" for="q5a">Using `entrySet()` method</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q5b" name="question5" value="B" class="custom-control-input">
                        <label class="custom-control-label" for="q5b">Using `keySet()` method</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q5c" name="question5" value="C" class="custom-control-input">
                        <label class="custom-control-label" for="q5c">Using `values()` method</label>
                    </div>
                    <div class="custom-control custom-radio">
                        <input type="radio" id="q5d" name="question5" value="D" class="custom-control-input">
                        <label class="custom-control-label" for="q5d">Using `iterator()` method</label>
                    </div>
                </div>

                <button type="submit" class="btn btn-primary">Submit Answers</button>
            </form>
        </div>
    </div>

    <script>
        document.getElementById('exercise-form').addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent form from submitting the traditional way

            // Define the correct answers
            const answers = {
                question1: 'A',
                question2: 'A',
                question3: 'A',
                question4: 'A',
                question5: 'A'
            };

            let score = 0;
            let message = '';

            // Loop through the answers to check correctness
            for (let [question, correctAnswer] of Object.entries(answers)) {
                const selected = document.querySelector(`input[name="${question}"]:checked`);
                const options = document.querySelectorAll(`input[name="${question}"]`);

                options.forEach(option => {
                    const label = document.querySelector(`label[for="${option.id}"]`);
                    if (option.value === correctAnswer) {
                        if (selected && selected.value === correctAnswer) {
                            label.classList.add('correct-answer');
                            score++;
                        } else {
                            label.classList.add('highlight');
                        }
                    } else if (selected && selected.value === option.value) {
                        label.classList.add('wrong-answer');
                        if (option.value === correctAnswer) {
                            label.classList.add('correct-answer');
                        }
                    }
                });
            }

            // Show the result in an alert
            message = `You scored ${score} out of ${Object.keys(answers).length}.`;
            alert(message);
        });
    </script>
</body>
</html>
